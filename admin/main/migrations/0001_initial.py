# Generated by Django 5.2.1 on 2025-05-19 04:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('biomedical-engineering', 'Biotibbiyot muhandisligi üß¨'), ('nursing', 'Oliy hamshiralik ishi üíâ'), ('medical-prevention', 'Tibbiy profilaktika ishi üõ°Ô∏è'), ('general-medicine', 'Davolash ishi ü©∫'), ('pharmacy', 'Farmatsiya üíä'), ('pediatrics', 'Pediatriya ishi üë∂'), ('dentistry', 'Stomatologiya ü¶∑'), ('fundamental-medicine', 'Fundamental tibbiyot üî¨')], max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': "Ta'lim yo'nalishi ",
                'verbose_name_plural': "Ta'lim yo'nalishlari ",
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('language', models.CharField(default='uz', max_length=2)),
                ('is_registered', models.BooleanField(default=False)),
                ('level', models.CharField(blank=True, max_length=200, null=True)),
                ('level_key', models.CharField(blank=True, max_length=200, null=True)),
                ('faculty', models.CharField(blank=True, max_length=200, null=True)),
                ('faculty_key', models.CharField(blank=True, max_length=200, null=True)),
                ('direction', models.CharField(blank=True, max_length=200, null=True)),
                ('direction_key', models.CharField(blank=True, max_length=200, null=True)),
                ('course', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('group', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Talaba ',
                'verbose_name_plural': 'Talabalar ',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('office', models.CharField(blank=True, choices=[('back_office', 'Back Office'), ('front_office', 'Front Office')], max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Admin ',
                'verbose_name_plural': 'Adminlar ',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('course', models.SmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.direction')),
            ],
            options={
                'verbose_name': 'Guruh ',
                'verbose_name_plural': 'Guruhlar ',
            },
        ),
        migrations.CreateModel(
            name='ScheduleGet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.SmallIntegerField()),
                ('direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.direction')),
            ],
            options={
                'verbose_name': 'Jadval shabloni',
                'verbose_name_plural': 'Jadval shabloni',
            },
        ),
        migrations.CreateModel(
            name='ScheduleUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.SmallIntegerField()),
                ('file', models.FileField(upload_to='schedules/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.direction')),
            ],
            options={
                'verbose_name': 'Jadval Yuklash',
                'verbose_name_plural': 'Jadvallar ',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_service', models.CharField(max_length=200)),
                ('service_slug', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='files/')),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='new', max_length=50)),
                ('office', models.CharField(choices=[('back_office', 'Back Office'), ('front_office', 'Front Office')], default='front_office', max_length=50)),
                ('response', models.TextField(blank=True, null=True)),
                ('response_file', models.FileField(blank=True, null=True, upload_to='files/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student')),
            ],
            options={
                'verbose_name': "So'rov ",
                'verbose_name_plural': "So'rovlar ",
                'ordering': ['-created_at'],
            },
        ),
    ]
